diff --git a/prisma/schema.prisma b/prisma/schema.prisma
index 1111111..2222222 100644
--- a/prisma/schema.prisma
+++ b/prisma/schema.prisma
@@ -1,3 +1,4 @@
 // Prisma schema for the legal defense fundraiser platform
 datasource db {
   provider = "postgresql"
   url      = env("DATABASE_URL")
 }
 
 generator client {
   provider = "prisma-client-js"
 }
 
 enum UserRole {
   USER
   ADMIN
   MODERATOR
 }
 
 enum CampaignStatus {
   DRAFT
   ACTIVE
   SUSPENDED
   COMPLETED
 }
 
 enum CampaignCategory {
   LEGAL_DEFENSE
   CIVIL_RIGHTS
   FAMILY_LAW
   CRIMINAL_DEFENSE
   HOUSING_JUSTICE
   IMMIGRATION
   CONSUMER_PROTECTION
   CLASS_ACTION
 }
 
 model User {
   id            String    @id @default(uuid())
   email         String    @unique
   name          String?
   password      String?
   image         String?
   role          UserRole  @default(USER)
   isVerified    Boolean   @default(false)
   emailVerified DateTime?
   createdAt     DateTime  @default(now())
   updatedAt     DateTime  @updatedAt
 
   // Relations
   campaigns     Campaign[]
   donations     Donation[]
 }
 
 model Campaign {
   id               String           @id @default(uuid())
   title            String
   slug             String           @unique
   description      String
   shortDescription String
   goalAmount       Decimal          @db.Decimal(10, 2)
   currentAmount    Decimal          @default(0) @db.Decimal(10, 2)
   category         CampaignCategory
   status           CampaignStatus   @default(DRAFT)
   isPublic         Boolean          @default(true)
   caseNumber       String?
   courtName        String?
   attorneyName     String?
   attorneyContact  String?
   endDate          DateTime?
-  images           String[]
-  videos           String[]
+  images           String[]         @default([])
+  videos           String[]         @default([])
+  videoUrl         String?
+  viewCount        Int              @default(0)
 
   createdAt        DateTime         @default(now())
   updatedAt        DateTime         @updatedAt
 
   // Relations
   userId           String
   user             User             @relation(fields: [userId], references: [id])
 
   donations        Donation[]
   comments         Comment[]
   updates          CampaignUpdate[]
   categories       CampaignCategoryTag[]
+
+  @@index([status, category, createdAt])
+  @@index([userId, createdAt])
 }
 
 model Donation {
   id              String   @id @default(uuid())
   amount          Decimal  @db.Decimal(10, 2)
   stripePaymentId String   @unique
   paymentStatus   String   // e.g., 'PENDING', 'SUCCEEDED', 'FAILED', 'REFUNDED'
   isAnonymous     Boolean  @default(false)
   createdAt       DateTime @default(now())
 
   // Relations
   userId     String
   user       User     @relation(fields: [userId], references: [id])
   campaignId String
   campaign   Campaign @relation(fields: [campaignId], references: [id])
+
+  @@index([campaignId, createdAt])
+  @@index([paymentStatus, createdAt])
 }
 
 model Comment {
   id         String   @id @default(uuid())
   content    String
   isApproved Boolean  @default(false)
   createdAt  DateTime @default(now())
 
   // Relations
   userId     String
   user       User     @relation(fields: [userId], references: [id])
   campaignId String
